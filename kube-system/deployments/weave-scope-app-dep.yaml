apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"extensions/v1beta1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"weave-scope","name":"weave-scope-app","weave-cloud-component":"scope","weave-scope-component":"app"},"name":"weave-scope-app","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"weave-scope","name":"weave-scope-app","weave-cloud-component":"scope","weave-scope-component":"app"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"app":"weave-scope","name":"weave-scope-app","weave-cloud-component":"scope","weave-scope-component":"app"}},"spec":{"containers":[{"args":["--no-probe"],"image":"weaveworks/scope:1.6.7","imagePullPolicy":"IfNotPresent","name":"app","ports":[{"containerPort":4040,"protocol":"TCP"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","schedulerName":"default-scheduler","terminationGracePeriodSeconds":30}}}}
  creationTimestamp: null
  generation: 1
  labels:
    app: weave-scope
    name: weave-scope-app
    weave-cloud-component: scope
    weave-scope-component: app
  name: weave-scope-app
  selfLink: /apis/extensions/v1beta1/namespaces/default/deployments/weave-scope-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: weave-scope
      name: weave-scope-app
      weave-cloud-component: scope
      weave-scope-component: app
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: weave-scope
        name: weave-scope-app
        weave-cloud-component: scope
        weave-scope-component: app
    spec:
      containers:
      - args:
        - --no-probe
        image: weaveworks/scope:1.6.7
        imagePullPolicy: IfNotPresent
        name: app
        ports:
        - containerPort: 4040
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status: {}

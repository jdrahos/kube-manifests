apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"extensions/v1beta1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"rook-api","rook_cluster":"rook"},"name":"rook-api","namespace":"rook"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"rook-api","rook_cluster":"rook"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"app":"rook-api","rook_cluster":"rook"},"name":"rook-api"},"spec":{"containers":[{"args":["api","--config-dir=/var/lib/rook","--port=8124","--hostnetwork=false"],"env":[{"name":"ROOK_VERSION_TAG","value":"v0.6.0"},{"name":"ROOK_NAMESPACE","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}},{"name":"ROOK_REPO_PREFIX","value":"rook"},{"name":"ROOK_MON_SECRET","valueFrom":{"secretKeyRef":{"key":"mon-secret","name":"rook-ceph-mon"}}},{"name":"ROOK_ADMIN_SECRET","valueFrom":{"secretKeyRef":{"key":"admin-secret","name":"rook-ceph-mon"}}},{"name":"ROOK_MON_ENDPOINTS","valueFrom":{"configMapKeyRef":{"key":"data","name":"rook-ceph-mon-endpoints"}}},{"name":"ROOK_CLUSTER_NAME","value":"rook"}],"image":"rook/rook:v0.6.0","imagePullPolicy":"IfNotPresent","name":"rook-api","terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","volumeMounts":[{"mountPath":"/var/lib/rook","name":"rook-data"}]}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","schedulerName":"default-scheduler","serviceAccount":"rook-api","serviceAccountName":"rook-api","terminationGracePeriodSeconds":30,"volumes":[{"emptyDir":{"sizeLimit":"0"},"name":"rook-data"}]}}}}
  creationTimestamp: null
  generation: 1
  labels:
    app: rook-api
    rook_cluster: rook
  name: rook-api
  selfLink: /apis/extensions/v1beta1/namespaces/rook/deployments/rook-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rook-api
      rook_cluster: rook
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: rook-api
        rook_cluster: rook
      name: rook-api
    spec:
      affinity: {}
      containers:
      - args:
        - api
        - --config-dir=/var/lib/rook
        - --port=8124
        - --hostnetwork=false
        env:
        - name: ROOK_VERSION_TAG
          value: v0.6.0
        - name: ROOK_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: ROOK_REPO_PREFIX
          value: rook
        - name: ROOK_MON_SECRET
          valueFrom:
            secretKeyRef:
              key: mon-secret
              name: rook-ceph-mon
        - name: ROOK_ADMIN_SECRET
          valueFrom:
            secretKeyRef:
              key: admin-secret
              name: rook-ceph-mon
        - name: ROOK_MON_ENDPOINTS
          valueFrom:
            configMapKeyRef:
              key: data
              name: rook-ceph-mon-endpoints
        - name: ROOK_CLUSTER_NAME
          value: rook
        image: rook/rook:v0.6.0
        imagePullPolicy: IfNotPresent
        name: rook-api
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/rook
          name: rook-data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: rook-api
      serviceAccountName: rook-api
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir:
          sizeLimit: "0"
        name: rook-data
status: {}
